{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loarder.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","components/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.tsx","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","concat","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","_ref","pokemon","_ref$borderColor","borderColor","_useState","useState","_useState2","_slicedToArray","setColor","history","useHistory","_jsx","className","onClick","id","push","onMouseEnter","onMouseLeave","children","_jsxs","style","src","picture","alt","name","created","Date","types","map","POKEMONS","hp","cp","PokemonService","_classCallCheck","_createClass","key","value","_this","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","_this2","data","isEmpty","find","pok","_this3","method","body","JSON","stringify","headers","index","findIndex","_this4","filter","_this5","toString","term","_this6","includes","Object","keys","length","console","process","PokemonSearch","setTerm","_useState3","_useState4","setPokemons","placeholder","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","parseInt","params","width","margin","PageNotFound","PokemonForm","isEditeForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","_defineProperty","_objectSpread","addPokemon","updatePokemon","validateForm","newForm","startsWith","endsWith","neweField","log","test","isTypeValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","checked","currentType","selecType","disabled","PokemonEdit","Pokemon","arguments","undefined","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","render","props","Redirect","pathname","App","Router","Switch","exact","path","ReactDom","document","getElementById"],"mappings":"8LAGeA,G,MAHI,SAACC,GAChB,MAAM,GAANC,OAAUD,EAAKE,UAAS,KAAAD,OAAID,EAAKG,WAAW,EAAC,KAAAF,OAAID,EAAKI,cAC1D,GC2CiBC,EA7CE,SAACC,GAChB,IAAIC,EAEJ,OAAQD,GACN,IAAK,MACHC,EAAQ,gBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,kBACR,MACF,IAAK,UACHA,EAAQ,kBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,uBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,uBACR,MACF,IAAK,WACHA,EAAQ,gBACR,MACF,IAAK,SACHA,EAAQ,cACR,MACF,QACEA,EAAQ,OAIZ,MAAM,QAANN,OAAeM,EACjB,E,cCEaC,EAjC6B,SAADC,GAAqC,IAAlCC,EAAOD,EAAPC,QAAOC,EAAAF,EAACG,mBAAW,IAAAD,EAAC,UAASA,EAC3EE,EAAyBC,qBAAkBC,EAAAC,YAAAH,EAAA,GAApCN,EAAKQ,EAAA,GAACE,EAAQF,EAAA,GACfG,EAAUC,cAYZ,OACIC,cAAA,OAAKC,UAAU,YAAYC,QAAS,kBALvBC,EAKwCb,EAAQa,QAJjEL,EAAQM,KAAK,aAADvB,OAAcsB,IADV,IAACA,CAKmD,EAAmBE,aAXxE,WACfR,EAASL,EACb,EASqHc,aARlG,WACfT,EAAS,UACb,EAM8IU,SAClIC,eAAA,OAAKP,UAAU,kBAAkBQ,MAAO,CAACjB,YAAYL,GAAOoB,SAAA,CACxDP,cAAA,OAAKC,UAAU,aAAYM,SACvBP,cAAA,OAAKU,IAAKpB,EAAQqB,QAASC,IAAKtB,EAAQuB,SAE5Cb,cAAA,OAAKC,UAAU,eAAcM,SACzBC,eAAA,OAAKP,UAAU,eAAcM,SAAA,CACzBP,cAAA,KAAAO,SAAIjB,EAAQuB,OACZb,cAAA,KAAAO,SAAGP,cAAA,SAAAO,SAAQ5B,EAAWW,EAAQwB,QAAQ,IAAIC,UACzCzB,EAAQ0B,MAAMC,KAAI,SAAC/B,GAAI,OACpBc,cAAA,QAAMC,UAAWhB,EAAWC,GAAMqB,SAAcrB,GAAPA,EAAmB,aAVTI,EAAQa,GAiBvF,E,gBCoEee,EA/GoB,CAClC,CACCf,GAAI,EACJU,KAAM,aACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,SAAU,UAClBF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,eACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,OACRF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,WACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,OACRF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,UAAW,UACnBF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,SAAU,OAClBF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,UACRF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,WACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,SAAU,OAClBF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,MACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,UACRF,QAAS,IAAIC,MAEd,CACCZ,GAAI,EACJU,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,YACRF,QAAS,IAAIC,MAEd,CACCZ,GAAI,GACJU,KAAM,YACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,UACRF,QAAS,IAAIC,MAEd,CACCZ,GAAI,GACJU,KAAM,gBACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,UACRF,QAAS,IAAIC,MAEd,CACCZ,GAAI,GACJU,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTK,MAAO,CAAC,OACRF,QAAS,IAAIC,OCzGMM,EAAc,oBAAAA,IAAAC,YAAA,KAAAD,EAAA,CA2GhC,OA3GgCE,YAAAF,EAAA,OAAAG,IAAA,cAAAC,MAMjC,WAA0C,IAADC,EAAA,KACvC,OAAGC,KAAKC,MACCC,MAAM,kCACZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAC,GAAK,OAAIR,EAAKS,YAAYD,EAAM,IAGlC,IAAIE,SAAQ,SAAAC,GACjBA,EAAQX,EAAKY,SACf,GACF,GAAC,CAAAd,IAAA,aAAAC,MAED,SAAkBtB,GAAoC,IAADoC,EAAA,KACnD,OAAGZ,KAAKC,MACCC,MAAM,kCAADhD,OAAmCsB,IAC9C2B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAU,GAAI,OAAID,EAAKE,QAAQD,GAAQ,KAAOA,CAAI,IAC7CP,OAAM,SAAAC,GAAK,OAAIK,EAAKJ,YAAYD,EAAM,IAGlC,IAAIE,SAAQ,SAAAC,GAEjBA,EADaE,EAAKD,SAASI,MAAM,SAAAC,GAAG,OAAIA,EAAIxC,KAAOA,CAAE,KACvC,KAChB,GACF,GAAC,CAAAqB,IAAA,gBAAAC,MAED,SAAqBnC,GAAqC,IAADsD,EAAA,KACvD,OAAGjB,KAAKC,MACCC,MAAM,kCAADhD,OAAmCS,EAAQa,IAAM,CAC3D0C,OAAQ,MACRC,KAAMC,KAAKC,UAAU1D,GACrB2D,QAAS,CAAE,eAAgB,sBAE5BnB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAC,GAAK,OAAIU,EAAKT,YAAYD,EAAM,IAGlC,IAAIE,SAAQ,SAAAC,GACjB,IAAQlC,EAAOb,EAAPa,GACF+C,EAAQN,EAAKN,SAASa,WAAU,SAAA7D,GAAO,OAAIA,EAAQa,KAAOA,CAAE,IAClEyC,EAAKN,SAASY,GAAS5D,EACvB+C,EAAQ/C,EACV,GACF,GAAC,CAAAkC,IAAA,gBAAAC,MAED,SAAqBnC,GAAgC,IAAD8D,EAAA,KAClD,OAAGzB,KAAKC,MACCC,MAAM,kCAADhD,OAAmCS,EAAQa,IAAM,CAC3D0C,OAAQ,SACRI,QAAS,CAAE,eAAgB,sBAE5BnB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAC,GAAK,OAAIkB,EAAKjB,YAAYD,EAAM,IAGlC,IAAIE,SAAQ,SAAAC,GACjB,IAAQlC,EAAOb,EAAPa,GACRiD,EAAKd,SAAWc,EAAKd,SAASe,QAAO,SAAA/D,GAAO,OAAIA,EAAQa,KAAOA,CAAE,IACjEkC,EAAQ,CAAC,EACX,GACF,GAAC,CAAAb,IAAA,aAAAC,MAED,SAAkBnC,GAAqC,IAADgE,EAAA,KAGpD,OAFAhE,EAAQwB,QAAU,IAAIC,KAAKzB,EAAQwB,QAAQyC,YAExC5B,KAAKC,MACCC,MAAM,iCAAkC,CAC7CgB,OAAQ,OACRC,KAAMC,KAAKC,UAAU1D,GACrB2D,QAAS,CAAE,eAAgB,sBAE5BnB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAC,GAAK,OAAIoB,EAAKnB,YAAYD,EAAM,IAGlC,IAAIE,SAAQ,SAAAC,GACjBiB,EAAKhB,SAASlC,KAAKd,GACnB+C,EAAQ/C,EACV,GACF,GAAC,CAAAkC,IAAA,gBAAAC,MAED,SAAqB+B,GAAmC,IAADC,EAAA,KACrD,OAAG9B,KAAKC,MACCC,MAAM,oCAADhD,OAAqC2E,IAChD1B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAC,GAAK,OAAIuB,EAAKtB,YAAYD,EAAM,IAGlC,IAAIE,SAAQ,SAAAC,GAEjBA,EADgBoB,EAAKnB,SAASe,QAAO,SAAA/D,GAAO,OAAIA,EAAQuB,KAAK6C,SAASF,EAAK,IAE7E,GAEF,GAAC,CAAAhC,IAAA,UAAAC,MAED,SAAee,GACb,OAAoC,IAA7BmB,OAAOC,KAAKpB,GAAMqB,MAC3B,GAAC,CAAArC,IAAA,cAAAC,MAED,SAAmBS,GACjB4B,QAAQ5B,MAAMA,EAChB,KAACb,CAAA,CA3GgC,GAAdA,EAEZiB,SAAqBpB,EAFTG,EAIZO,OAAkCmC,E,WCqC5BC,EAvC0B,WAEvC,IAAAvE,EAAwBC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAArC+D,EAAI7D,EAAA,GAAEsE,EAAOtE,EAAA,GACpBuE,EAAgCxE,mBAAoB,IAAGyE,EAAAvE,YAAAsE,EAAA,GAAhD5B,EAAQ6B,EAAA,GAAEC,EAAWD,EAAA,GAc5B,OACEnE,cAAA,OAAKC,UAAU,MAAKM,SACpBP,cAAA,OAAKC,UAAU,uBAAsBM,SACnCP,cAAA,OAAKC,UAAU,OAAMM,SACrBC,eAAA,OAAKP,UAAU,eAAcM,SAAA,CAC3BP,cAAA,OAAKC,UAAU,cAAaM,SAC5BP,cAAA,SAAOd,KAAK,OAAOmF,YAAY,2BAAwB5C,MAAO+B,EAAMc,SAAU,SAAAC,GAAC,OAlB3D,SAACA,GACzB,IAAMf,EAAOe,EAAEC,OAAO/C,MACtBwC,EAAQT,GAELA,EAAKK,QAAU,EAChBO,EAAY,IAId/C,EAAeoD,cAAcjB,GAAM1B,MAAK,SAAAQ,GAAQ,OAAI8B,EAAY9B,EAAS,GAC3E,CAQyFoC,CAAkBH,EAAE,MAEvGvE,cAAA,OAAKC,UAAU,aAAYM,SAC1B+B,EAASrB,KAAI,SAAC3B,GAAO,OACpBU,cAAC2E,IAAI,CAAkBC,GAAE,aAAA/F,OAAeS,EAAQa,IAAMF,UAAU,kBAAiBM,SAC9EjB,EAAQuB,MADAvB,EAAQa,GAEZ,cAQjB,ECNe0E,EA9BwB,WACrC,IAAApF,EAAgCC,mBAAoB,IAAGC,EAAAC,YAAAH,EAAA,GAAhD6C,EAAQ3C,EAAA,GAAEyE,EAAWzE,EAAA,GAO5B,OANAmF,qBAAU,WACRzD,EAAe0D,cACdjD,MAAK,SAAAQ,GAAQ,OAAI8B,EAAY9B,EAAS,GACzC,GAAG,IAID9B,eAAA,OAAAD,SAAA,CACEP,cAAA,MAAIC,UAAU,SAAQM,SAAC,eACvBC,eAAA,OAAKP,UAAU,YAAWM,SAAA,CACxBC,eAAA,OAAKP,UAAU,MAAKM,SAAA,CACpBP,cAACgE,EAAa,IACb1B,EAASrB,KAAI,SAAA3B,GAAO,OACnBU,cAACZ,EAAW,CAAkBE,QAASA,GAArBA,EAAQa,GAAwB,OAGpDH,cAAC2E,IAAI,CACHC,GAAI,gBACJ3E,UAAU,gEACVQ,MAAO,CAACuE,SAAS,QAAQC,OAAO,OAAOC,MAAM,QAAQ3E,SAErDP,cAAA,KAAGC,UAAU,iBAAgBM,SAAC,eAKxC,ECde4E,EAlBmB,WAEhC,OACEnF,cAAA,OAAKC,UAAU,+BAA8BM,SAC3CC,eAAA,OAAKP,UAAU,6BAA4BM,SAAA,CACzCP,cAAA,OAAKC,UAAU,sBAAqBM,SAClCP,cAAA,OAAKC,UAAU,aAEjBD,cAAA,OAAKC,UAAU,YAAWM,SACxBP,cAAA,OAAKC,UAAU,aACXD,cAAA,OAAKC,UAAU,uBAAsBM,SACzCP,cAAA,OAAKC,UAAU,iBAKzB,EC0DemF,EAlEwD,SAAH/F,GAAmB,IAAbgG,EAAKhG,EAALgG,MAExE5F,EAA8BC,mBAAuB,MAAKC,EAAAC,YAAAH,EAAA,GAAnDH,EAAOK,EAAA,GAAE2F,EAAU3F,EAAA,GAO1B,OALAmF,qBAAU,WACRzD,EAAekE,WAAWC,SAAUH,EAAMI,OAAOtF,KAChD2B,MAAK,SAAAxC,GAAO,OAAIgG,EAAWhG,EAAQ,GACtC,GAAG,CAAC+F,EAAMI,OAAOtF,KAGfH,cAAA,OAAAO,SACIjB,EACAU,cAAA,OAAKC,UAAU,MAAKM,SAClBC,eAAA,OAAKP,UAAU,uBAAsBM,SAAA,CACnCP,cAAA,MAAIC,UAAU,gBAAeM,SAAGjB,EAAQuB,OACxCL,eAAA,OAAKP,UAAU,iBAAgBM,SAAA,CAC7BC,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,OAAKU,IAAKpB,EAAQqB,QAASC,IAAKtB,EAAQuB,KAAMJ,MAAO,CAACiF,MAAO,QAASC,OAAQ,YAChF3F,cAAC2E,IAAI,CAACC,GAAE,kBAAA/F,OAAoBS,EAAQa,IAAMF,UAAU,wDAAuDM,SACzGP,cAAA,KAAGC,UAAU,iBAAgBM,SAAC,cAGhCC,eAAA,OAAKP,UAAU,eAAcM,SAAA,CAC3BP,cAAA,OAAKC,UAAU,eAAcM,SAC3BP,cAAA,SAAOC,UAAU,mBAAkBM,SACjCC,eAAA,SAAAD,SAAA,CACEC,eAAA,MAAAD,SAAA,CACEP,cAAA,MAAAO,SAAI,QACJP,cAAA,MAAAO,SAAIP,cAAA,UAAAO,SAAUjB,EAAQuB,YAExBL,eAAA,MAAAD,SAAA,CACEP,cAAA,MAAAO,SAAI,kBACJP,cAAA,MAAAO,SAAIP,cAAA,UAAAO,SAAUjB,EAAQ6B,UAExBX,eAAA,MAAAD,SAAA,CACEP,cAAA,MAAAO,SAAI,iBACJP,cAAA,MAAAO,SAAIP,cAAA,UAAAO,SAAUjB,EAAQ8B,UAExBZ,eAAA,MAAAD,SAAA,CACEP,cAAA,MAAAO,SAAI,UACJP,cAAA,MAAAO,SACGjB,EAAQ0B,MAAMC,KAAI,SAAA/B,GAAI,OACtBc,cAAA,QAAiBC,UAAWhB,EAAWC,GAAMqB,SAAErB,GAApCA,EAAgD,SAGhEsB,eAAA,MAAAD,SAAA,CACEP,cAAA,MAAAO,SAAI,wBACJP,cAAA,MAAAO,SAAK5B,EAAWW,EAAQwB,QAAS,IAAIC,kBAK7Cf,cAAA,OAAKC,UAAU,cAAaM,SAC1BP,cAAC2E,IAAI,CAACC,GAAG,IAAGrE,SAAC,wBAOvBC,eAAA,MAAIP,UAAU,SAAQM,SAAA,CAAC,IAACP,cAACmF,EAAM,QAIvC,EC1DeS,EAbyB,WAEtC,OACEpF,eAAA,OAAKP,UAAU,SAAQM,SAAA,CACrBP,cAAA,OAAKU,IAAI,iEAAiEE,IAAI,wBAC9EZ,cAAA,MAAAO,SAAI,mCACJP,cAAC2E,IAAI,CAACC,GAAG,IAAI3E,UAAU,mCAAkCM,SAAC,+BAKhE,E,eC8NesF,EAlN+B,SAAHxG,GAA+B,IAA1BC,EAAOD,EAAPC,QAAQwG,EAAWzG,EAAXyG,YAEpDrG,EAAyBC,mBAAe,CACtCiB,QAAQ,CAACc,MAAMnC,EAAQqB,SACvBE,KAAK,CAACY,MAAMnC,EAAQuB,KAAKkF,SAAQ,GACjC5E,GAAG,CAACM,MAAMnC,EAAQ6B,GAAG4E,SAAQ,GAC7B3E,GAAG,CAACK,MAAMnC,EAAQ8B,GAAG2E,SAAQ,GAC7B/E,MAAM,CAACS,MAAMnC,EAAQ0B,MAAM+E,SAAQ,KACnCpG,EAAAC,YAAAH,EAAA,GANKuG,EAAIrG,EAAA,GAAGsG,EAAOtG,EAAA,GAOfG,EAAUC,cAMVmG,EAAU,SAAChH,GACjB,OAAO8G,EAAKhF,MAAMS,MAAMiC,SAASxE,EAErC,EACWwF,EAAoB,SAACH,GAC5B,IAAM4B,EAAmB5B,EAAEC,OAAO3D,KAC5BuF,EAAoB7B,EAAEC,OAAO/C,MAC7B4E,EAAYC,YAAA,GACbH,EAAY,CAAE1E,MAAM2E,IAEzBH,EAAOM,wBAAC,CAAC,EAAGP,GAAQK,GACxB,EA+BMG,EAAa,WAEjBnF,EAAemF,WAAWlH,GAASwC,MAAK,kBAAMhC,EAAQM,KAAK,YAAY,GACzE,EACMqG,EAAgB,WACpBpF,EAAeoF,cAAcnH,GAExBwC,MAAK,kBAAMhC,EAAQM,KAAK,aAADvB,OAAcS,EAAQa,IAAK,GACzD,EACMuG,EAAe,WACjB,IAAIC,EAAiBX,EAErB,IAAIF,EAAY,CAId,GAAIE,EAAKrF,QAAQc,MAAM8B,WAAWqD,WAHpB,8DAG0CZ,EAAKrF,QAAQc,MAAM8B,WAAWsD,SAF1E,QAQP,CACH,IAAMC,EAAkB,CAACrF,MAAOuE,EAAKrF,QAAQc,MAAMS,MAAM,GAAG6D,SAAQ,GACpEY,EAAOJ,wBAAA,GAAOP,GAAQ,CAACrF,QAASmG,GAClC,KAToG,CAClG,IACMA,EAAkB,CAACrF,MAAOuE,EAAKrF,QAAQc,MAAMS,MAD3B,wBAC0C6D,SAAQ,GAC1EY,EAAOJ,wBAAA,GAAOP,GAAQ,CAACrF,QAASmG,IAChChD,QAAQiD,KAEV,CAKF,CAEA,GAAI,4BAAsBC,KAAKhB,EAAKnF,KAAKY,OAIpC,CACD,IAAM4E,EAAmB,CAAC5E,MAAMuE,EAAKnF,KAAKY,MAAMS,MAAM,GAAG6D,SAAQ,GACjEY,EAAOJ,wBAAA,GAAQI,GAAW,CAAC9F,KAAKwF,GACpC,KAPgD,CAC5C,IACMA,EAAmB,CAAC5E,MAAMuE,EAAKnF,KAAKY,MAAMS,MADlB,sCACqC6D,SAAQ,GAC3EY,EAAOJ,wBAAA,GAAQI,GAAW,CAAC9F,KAAKwF,GACpC,CAKA,GAAI,eAAeW,KAAKhB,EAAK7E,GAAGM,OAI3B,CACD,IAAM4E,EAAmB,CAAC5E,MAAMuE,EAAK7E,GAAGM,MAAMS,MAAM,GAAG6D,SAAQ,GAC/DY,EAAOJ,wBAAA,GAAQI,GAAW,CAACxF,GAAGkF,GAClC,KAPuC,CACnC,IACMA,EAAmB,CAAC5E,MAAMuE,EAAK7E,GAAGM,MAAMS,MADhB,0DACmC6D,SAAQ,GACzEY,EAAOJ,wBAAA,GAAQI,GAAW,CAACxF,GAAGkF,GAClC,CAKA,GAAI,eAAeW,KAAKhB,EAAK5E,GAAGK,OAI3B,CACD,IAAM4E,EAAmB,CAAC5E,MAAMuE,EAAK5E,GAAGK,MAAMS,MAAM,GAAG6D,SAAQ,GAC/DY,EAAOJ,wBAAA,GAAQI,GAAW,CAACvF,GAAGiF,GAClC,KAPuC,CACnC,IACMA,EAAmB,CAAC5E,MAAMuE,EAAK5E,GAAGK,MAAMS,MADhB,yDACmC6D,SAAQ,GACzEY,EAAOJ,wBAAA,GAAQI,GAAW,CAACvF,GAAGiF,GAClC,CAQA,OAHAJ,EAAQU,GAGDA,EAAQ9F,KAAKkF,SAAWY,EAAQxF,GAAG4E,SAAWY,EAAQvF,GAAG2E,OACpE,EACMkB,EAAc,SAAC/H,GACjB,OAA+B,IAA5B8G,EAAKhF,MAAMS,MAAMoC,SAAgBqC,EAAQhH,OACb,IAA5B8G,EAAKhF,MAAMS,MAAMoC,SAAkBqC,EAAQhH,GAElD,EAIE,OACEc,cAAA,QAAMkH,SAAU,SAAA3C,GAAC,OAvFA,SAACA,GAElBA,EAAE4C,iBAECT,MACDpH,EAAQqB,QAAUqF,EAAKrF,QAAQc,MAC/BnC,EAAQuB,KAAOmF,EAAKnF,KAAKY,MACzBnC,EAAQ8B,GAAK4E,EAAK5E,GAAGK,MACrBnC,EAAQ6B,GAAK6E,EAAK7E,GAAGM,MACrBnC,EAAQ0B,MAAQgF,EAAKhF,MAAMS,MAC3BqE,EAAYW,IAAgBD,IAMlC,CAuEyBY,CAAa7C,EAAE,EAAChE,SACnCP,cAAA,OAAKC,UAAU,MAAKM,SAClBP,cAAA,OAAKC,UAAU,uBAAsBM,SACnCC,eAAA,OAAKP,UAAU,iBAAgBM,SAAA,CAC5BuF,GACCtF,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,OAAKU,IAAKpB,EAAQqB,QAASC,IAAKtB,EAAQuB,KAAMJ,MAAO,CAACiF,MAAO,QAASC,OAAQ,YAC9E3F,cAAA,QAAMC,UAAU,oDAAmDM,SACjEP,cAAA,KAAGE,QAZC,WACpBmB,EAAegG,cAAc/H,GAASwC,MAAK,kBAAMhC,EAAQM,KAAK,YAAY,GAC5E,EAU6CH,UAAU,iBAAgBM,SAAC,gBAK5DC,eAAA,OAAKP,UAAU,eAAcM,SAAA,CAC3BC,eAAA,OAAKP,UAAU,eAAcM,SAAA,EAEzBuF,GACAtF,eAAA,OAAKP,UAAU,aAAYM,SAAA,CAC3BP,cAAA,SAAOsH,QAAQ,OAAM/G,SAAC,UACtBP,cAAA,SAAOG,GAAG,UAAUU,KAAK,UAAU3B,KAAK,OAAOe,UAAU,eAAewB,MAAOuE,EAAKrF,QAAQc,MAAO6C,SAAU,SAAAC,GAAC,OAAEG,EAAkBH,EAAE,IACnIyB,EAAKrF,QAAQuB,OACdlC,cAAA,OAAKC,UAAU,0BAAyBM,SACrCyF,EAAKrF,QAAQuB,WAKlB1B,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,SAAOsH,QAAQ,OAAM/G,SAAC,QACtBP,cAAA,SAAOG,GAAG,OAAOU,KAAK,OAAO3B,KAAK,OAAOe,UAAU,eAAewB,MAAOuE,EAAKnF,KAAKY,MAAO6C,SAAU,SAAAC,GAAC,OAAEG,EAAkBH,EAAE,IAC1HyB,EAAKnF,KAAKqB,OACXlC,cAAA,OAAKC,UAAU,0BAAyBM,SACrCyF,EAAKnF,KAAKqB,WAKf1B,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,SAAOsH,QAAQ,KAAI/G,SAAC,iBACpBP,cAAA,SAAOG,GAAG,KAAKU,KAAK,KAAK3B,KAAK,SAASe,UAAU,eAAewB,MAAOuE,EAAK7E,GAAGM,MAAO6C,SAAU,SAAAC,GAAC,OAAEG,EAAkBH,EAAE,IACtHyB,EAAK7E,GAAGe,OACTlC,cAAA,OAAKC,UAAU,0BAAyBM,SACrCyF,EAAK7E,GAAGe,WAKb1B,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,SAAOsH,QAAQ,KAAI/G,SAAC,iBACpBP,cAAA,SAAOG,GAAG,KAAKU,KAAK,KAAK3B,KAAK,SAASe,UAAU,eAAewB,MAAOuE,EAAK5E,GAAGK,MAAO6C,SAAU,SAAAC,GAAC,OAAEG,EAAkBH,EAAE,IACtHyB,EAAK5E,GAAGc,OACTlC,cAAA,OAAKC,UAAU,0BAAyBM,SACrCyF,EAAK5E,GAAGc,WAKb1B,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,SAAAO,SAAO,UA/KG,CACxB,SAAU,MAAO,MAAO,UAAW,SAAU,WAC7C,SAAU,YAAQ,MAAO,SAAU,OA8KdU,KAAI,SAAA/B,GAAI,OACbc,cAAA,OAAgBS,MAAO,CAAC8G,aAAc,QAAQhH,SAC5CC,eAAA,SAAAD,SAAA,CACEP,cAAA,SAAOG,GAAIjB,EAAMA,KAAK,WAAYe,UAAU,YAAYwB,MAAOvC,EAAMsI,QAAStB,EAAQhH,GAAOoF,SAAU,SAAAC,GAAC,OAlK9G,SAACrF,EAAYqF,GAC3B,IACI8B,EAGAA,EAJY9B,EAAEC,OAAOgD,QAIV,CAAC/F,MADcuE,EAAKhF,MAAMS,MAAM5C,OAAO,CAACK,KAIxC,CAAEuC,MADauE,EAAKhF,MAAMS,MAAM4B,QAAO,SAACoE,GAAkB,OAAIA,IAAgBvI,CAAI,KAGjG+G,EAAOM,wBAAC,CAAC,EAAGP,GAAQ,CAAChF,MAAMqF,IAC/B,CAuJoIqB,CAAUxI,EAAKqF,EAAE,EAAEoD,UAAWV,EAAY/H,KACtJc,cAAA,QAAAO,SACEP,cAAA,KAAGC,UAAWhB,EAAWC,GAAMqB,SAAGrB,UAJ9BA,EAOJ,UAIZc,cAAA,OAAKC,UAAU,qBAAoBM,SAEjCP,cAAA,UAAQd,KAAK,SAASe,UAAU,MAAKM,SAAC,yBAQtD,ECpMeqH,EA7BqD,SAAHvI,GAAmB,IAAbgG,EAAKhG,EAALgG,MAErE5F,EAA8BC,mBAAuB,MAAKC,EAAAC,YAAAH,EAAA,GAAnDH,EAAOK,EAAA,GAAE2F,EAAU3F,EAAA,GAa1B,OAXAmF,qBAAU,WACRzD,EAAekE,WAAWC,SAASH,EAAMI,OAAOtF,KAAK2B,MAAK,SAACxC,GACzDgG,EAAWhG,EACb,GAMF,GAAG,CAAC+F,EAAMI,OAAOtF,KAGfH,cAAA,OAAAO,SACIjB,EACAkB,eAAA,OAAKP,UAAU,MAAKM,SAAA,CAChBC,eAAA,MAAIP,UAAU,gBAAeM,SAAA,CAAC,aAASjB,EAAQuB,QAC/Cb,cAAC6F,EAAW,CAACvG,QAASA,EAASwG,aAAa,OAGhD9F,cAAA,MAAIC,UAAU,SAAQM,SAAC,sCAI/B,ECpCqBsH,EAAOtG,aAWxB,SAAAsG,EACC1H,GAOE,IANFgB,EAAU2G,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACb1G,EAAU0G,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACbjH,EAAYiH,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAG,MACfnH,EAAemH,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAG,mEAClB9G,EAAoB8G,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,UACxBhH,EAAagH,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAI/G,KAAMO,YAAA,KAAAuG,GAAA,KAhB3B1H,QAAE,OACFgB,QAAE,OACFC,QAAE,OACFP,UAAI,OACJF,aAAO,OACPK,WAAK,OACLF,aAAO,EAaNa,KAAKxB,GAAKA,EACVwB,KAAKR,GAAKA,EACVQ,KAAKP,GAAKA,EACVO,KAAKd,KAAOA,EACZc,KAAKhB,QAAUA,EACfgB,KAAKX,MAAQA,EACbW,KAAKb,QAAUA,CAChB,ICZYkH,EAXuB,WACnC,IAAAvI,EAAaC,oBAAiB,IAAIqB,MAAOkH,WAAlC9H,EAA4CP,YAAAH,EAAA,GAA1C,GACTyE,EAAkBxE,mBAAkB,IAAImI,EAAQ1H,IAAzCb,EAA6CM,YAAAsE,EAAA,GAAtC,GAEd,OACI1D,eAAA,OAAKP,UAAU,MAAKM,SAAA,CAChBP,cAAA,MAAIC,UAAU,gBAAeM,SAAC,wBAC9BP,cAAC6F,EAAW,CAACvG,QAASA,EAASwG,aAAa,MAGxD,ECfqBoC,EAAqB,oBAAAA,IAAA5G,YAAA,KAAA4G,EAAA,CAarC,OAbqC3G,YAAA2G,EAAA,OAAA1G,IAAA,QAAAC,MAGtC,SAAa0G,EAAiBC,GAAmC,IAAD1G,EAAA,KAGtD2G,EAAiC,SAAbF,GAAmC,WAAbC,EAChD,OAAO,IAAIhG,SAAQ,SAAAC,GACfiG,YAAY,WACR5G,EAAK2G,gBAAkBA,EACvBhG,EAAQgG,EACZ,GAAE,IACN,GACJ,KAACH,CAAA,CAbqC,GAArBA,EACVG,iBAA4B,ECcvC,IA8GeE,EA9GkB,WAE/B,IAAMzI,EAAUC,cAEhBN,EAAwBC,mBAAe,CACrCyI,SAAU,CAAE1G,MAAO,IACnB2G,SAAU,CAAE3G,MAAO,MACnB9B,EAAAC,YAAAH,EAAA,GAHKuG,EAAIrG,EAAA,GAAEsG,EAAOtG,EAAA,GAKpBuE,EAA8BxE,mBAAiB,sDAA4CyE,EAAAvE,YAAAsE,EAAA,GAApFsE,EAAOrE,EAAA,GAAEsE,EAAUtE,EAAA,GAEpBO,EAAoB,SAACH,GACzB,IAAM4B,EAAoB5B,EAAEC,OAAO3D,KAC7BuF,EAAqB7B,EAAEC,OAAO/C,MAC9B4E,EAAeC,YAAA,GAAMH,EAAY,CAAE1E,MAAO2E,IAEhDH,EAAOM,wBAAC,CAAC,EAAIP,GAASK,GACxB,EA8BMe,EAAe,SAAC7C,GACpBA,EAAE4C,iBA7BiB,WACnB,IAAIR,EAAgBX,EAGpB,GAAGA,EAAKmC,SAAS1G,MAAMoC,OAAS,EAAG,CACjC,IACMwC,EAAkB,CAAE5E,MAAOuE,EAAKmC,SAAS1G,MAAOS,MAD7B,+DAC8C6D,SAAS,GAChFY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEwB,SAAU9B,GACzC,KAAO,CACL,IAAMA,EAAkB,CAAE5E,MAAOuE,EAAKmC,SAAS1G,MAAOS,MAAO,GAAI6D,SAAS,GAC1EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEwB,SAAU9B,GACzC,CAGA,GAAGL,EAAKoC,SAAS3G,MAAMoC,OAAS,EAAG,CACjC,IACMwC,EAAkB,CAAC5E,MAAOuE,EAAKoC,SAAS3G,MAAOS,MAD5B,kEAC6C6D,SAAS,GAC/EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEyB,SAAU/B,GACzC,KAAO,CACL,IAAMA,EAAkB,CAAE5E,MAAOuE,EAAKoC,SAAS3G,MAAOS,MAAO,GAAI6D,SAAS,GAC1EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEyB,SAAU/B,GACzC,CAIA,OAFAJ,EAAQU,GAEDA,EAAQwB,SAASpC,SAAWY,EAAQyB,SAASrC,OACtD,CAIsBW,KAElB+B,EAAW,oDACXP,EAAsBQ,MAAM1C,EAAKmC,SAAS1G,MAAOuE,EAAKoC,SAAS3G,OAAOK,MAAK,SAAAuG,GACrEA,EAKJvI,EAAQM,KAAK,aAJXqI,EAAW,sDAMf,IAEJ,EAEA,OACEzI,cAAA,QAAMkH,SAAU,SAAC3C,GAAC,OAAK6C,EAAa7C,EAAE,EAAChE,SACrCP,cAAA,OAAKC,UAAU,MAAKM,SAClBP,cAAA,OAAKC,UAAU,uBAAsBM,SACnCP,cAAA,OAAKC,UAAU,iBAAgBM,SAC7BC,eAAA,OAAKP,UAAU,eAAcM,SAAA,CAC3BC,eAAA,OAAKP,UAAU,eAAcM,SAAA,CAE1BiI,GAAWxI,cAAA,OAAKC,UAAU,aAAYM,SACrCP,cAAA,OAAKC,UAAU,4BAA2BM,SACvCiI,MAILhI,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,SAAOsH,QAAQ,WAAU/G,SAAC,gBAC1BP,cAAA,SAAOG,GAAG,WAAWjB,KAAK,OAAO2B,KAAK,WAAWZ,UAAU,eAAewB,MAAOuE,EAAKmC,SAAS1G,MAAO6C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,EAAE,IAExIyB,EAAKmC,SAASjG,OACflC,cAAA,OAAKC,UAAU,0BAAyBM,SACtCyF,EAAKmC,SAASjG,WAIlB1B,eAAA,OAAKP,UAAU,aAAYM,SAAA,CACzBP,cAAA,SAAOsH,QAAQ,WAAU/G,SAAC,iBAC1BP,cAAA,SAAOG,GAAG,WAAWjB,KAAK,WAAW2B,KAAK,WAAWZ,UAAU,eAAewB,MAAOuE,EAAKoC,SAAS3G,MAAO6C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,EAAE,IAE5IyB,EAAKoC,SAASlG,OACflC,cAAA,OAAKC,UAAU,0BAAyBM,SACtCyF,EAAKoC,SAASlG,cAIpBlC,cAAA,OAAKC,UAAU,qBAAoBM,SAEjCP,cAAA,UAAQd,KAAK,SAASe,UAAU,MAAKM,SAAC,wBAQtD,E,wBC5GeoI,EAXM,SAAHtJ,GAAA,IAAiBuJ,EAASvJ,EAApBwJ,UAAyBC,EAAIC,YAAA1J,EAAA2J,GAAA,OACnDhJ,cAACiJ,IAAK1C,wBAAA,GAAKuC,GAAI,IAAEI,OAAQ,SAACC,GAExB,OADwBjB,EAAsBG,gBAKvCrI,cAAC4I,EAASrC,YAAA,GAAK4C,IAHbnJ,cAACoJ,IAAQ,CAACxE,GAAI,CAAEyE,SAAU,WAIrC,IAAK,ECsBQC,EAzBgB,WAE9B,OACCtJ,cAACuJ,IAAM,CAAAhJ,SACLC,eAAA,OAAAD,SAAA,CACIP,cAAA,OAAAO,SACIP,cAAA,OAAKC,UAAU,kBAAiBM,SAC5BP,cAAC2E,IAAI,CAACC,GAAG,IAAI3E,UAAU,oBAAmBM,SAAC,iBAInDC,eAACgJ,IAAM,CAAAjJ,SAAA,CACHP,cAAC2I,EAAY,CAACc,OAAK,EAACC,KAAK,IAAIb,UAAWhE,IACxC7E,cAACiJ,IAAK,CAACQ,OAAK,EAACC,KAAK,SAASb,UAAWN,IACtCvI,cAAC2I,EAAY,CAACc,OAAK,EAACC,KAAM,YAAYb,UAAWhE,IACjD7E,cAAC2I,EAAY,CAACc,OAAK,EAACC,KAAM,gBAAgBb,UAAWb,IACrDhI,cAAC2I,EAAY,CAACc,OAAK,EAACC,KAAK,qBAAqBb,UAAWjB,IACzD5H,cAAC2I,EAAY,CAACe,KAAK,gBAAgBb,UAAWzD,IAC9CpF,cAACiJ,IAAK,CAACJ,UAAWjD,WAK9B,EC3BA+D,IAAST,OACLlJ,cAACsJ,EAAG,IACJM,SAASC,eAAe,Q","file":"static/js/main.bc7b3512.chunk.js","sourcesContent":["const formatDate = (date:Date)=>{\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\n}\nexport default formatDate","const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n  }\n\n  export default formatType","import React ,{ FunctionComponent, useState}from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css'\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\n\ntype Props ={\n    pokemon:Pokemon,\n    borderColor?:string\n}\nconst PokemonCard: FunctionComponent<Props>=({pokemon,borderColor=\"#009688\"})=>{\nconst [color,setColor] = useState<string>()\nconst history = useHistory();\n\nconst showBorder = () =>{\n    setColor(borderColor)\n}\nconst hideBorder = () =>{\n    setColor(\"#f5f5f5\")//on remet la couleur de la bordure en gris\n}\nconst goToPokemon = (id:number) =>{\n    history.push(`/pokemons/${id}`)\n}\n\n    return(\n        <div className=\"col s6 m4\" onClick={()=> goToPokemon(pokemon.id)} key={pokemon.id} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n            <div className=\"card horizontal\" style={{borderColor:color}}>\n                <div className=\"card-image\">\n                    <img src={pokemon.picture} alt={pokemon.name} />\n               </div>\n                <div className=\"card-stacked\">\n                    <div className=\"card-content\">\n                        <p>{pokemon.name}</p>\n                        <p><small>{formatDate(pokemon.created=new Date())}</small></p>\n                        {pokemon.types.map((type) =>\n                            <span className={formatType(type)}  key={type}>{type}</span>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>        \n    )\n}\nexport default PokemonCard","import Pokemon from \"./pokemon\";\nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n  \nexport default class PokemonService {\n  \n  static pokemons:Pokemon[] = POKEMONS;\n  \n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n  \n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n  \n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {  \n      const poke = this.pokemons.find( pok => pok.id === id)  \n      resolve(poke||null);\n    }); \n  }\n  \n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n  \n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n  \n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created.toString());\n  \n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n  \n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  \n  }\n  \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n  \n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport PokemonCard from '../components/pokemon-card';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  useEffect(() => {\n    PokemonService.getPokemons()\n    .then(pokemons => setPokemons(pokemons))\n  }, []);\n  \n  \n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\"> \n        <PokemonSearch />\n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\n        ))}\n        </div>\n        <Link \n          to={\"/pokemons/add\"}\n          className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\" \n          style={{position:'fixed',bottom:'25px',right:'25px'}}\n        >\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loarder';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(parseInt( match.params.id) )\n    .then(pokemon => setPokemon(pokemon))\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                <i className=\"material-icons\">edit</i>\n            </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created= new Date())}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"> <Loader /></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport { log } from 'console';\nimport PokemonService from '../services/pokemon-service';\n  \ntype Props = {\n  pokemon: Pokemon,\n  isEditeForm: boolean\n};\ntype Field ={\n    value:any,\n    error?:string,\n    isValid?:boolean\n}\ntype Form = {\n    picture:Field,\n    name:Field,\n    hp:Field,\n    cp:Field,\n    types:Field,\n    \n}\n  \nconst PokemonForm: FunctionComponent<Props> = ({pokemon,isEditeForm}) => {\n  \n    const [form , setForm] = useState<Form>({\n      picture:{value:pokemon.picture},\n      name:{value:pokemon.name,isValid:true},\n      hp:{value:pokemon.hp,isValid:true},\n      cp:{value:pokemon.cp,isValid:true},\n      types:{value:pokemon.types,isValid:true},\n    });\n    const history = useHistory()\n    const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n    const hasType = (type:string):boolean =>{\n    return form.types.value.includes(type);\n\n}\n    const  handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) =>{\n    const fieldName:string = e.target.name;\n    const fieldValue:string = e.target.value;\n    const newField:any = {\n        [fieldName]: { value:fieldValue }\n    };\n    setForm({...form,...newField});\n}\nconst selecType = (type:string,e: React.ChangeEvent<HTMLInputElement>):void =>{\n    const checked = e.target.checked\n    let newField:Field;\n    if(checked){\n        const newTypes:string[] = form.types.value.concat([type])\n        newField = {value: newTypes}\n    }else{\n        const newTypes:string[] = form.types.value.filter((currentType:string)=> currentType !== type)\n        newField = { value:newTypes}\n    }\n    setForm({...form,...{types:newField}})\n}\n\nconst handleSubmit = (e:React.FormEvent<HTMLFormElement>) =>{\n\n    e.preventDefault();\n    \n    if(validateForm()){\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.cp = form.cp.value;\n      pokemon.hp = form.hp.value;\n      pokemon.types = form.types.value;\n      isEditeForm?updatePokemon():addPokemon();\n    }\n\n  \n      \n    \n}\nconst addPokemon = () => {\n \n  PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n}\nconst updatePokemon = () => {\n  PokemonService.updatePokemon(pokemon)\n      // .then((pok) => console.log(pok))\n      .then(() => history.push(`/pokemons/${pokemon.id}`) )\n}\nconst validateForm = ()=> {\n    let newForm : Form = form;\n    //validate \n    if(!isEditeForm){\n      const start = \"http://assets.pokemon.com/assets/cms2/img/pokedex/detail/\"\n      const end = \".png\"\n      //ici pour coriger le bug j'ai ajoute la methode toString() to form.picture.value avant d'appliquer .startsWith()\n      if(!form.picture.value.toString().startsWith(start) || !form.picture.value.toString().endsWith(end)){\n        const errorMsg:string = \"L'url n'est pas valid\"\n        const neweField:Field = {value: form.picture.value,error:errorMsg,isValid:false}\n        newForm = {...form,...{picture: neweField}}\n        console.log();\n        \n      }else{\n        const neweField:Field = {value: form.picture.value,error:\"\",isValid:true}\n        newForm = {...form,...{picture: neweField}}\n      }\n\n    }\n    //Validator name\n    if(!/^[a-zA-Zéè_]{3,25}$/.test(form.name.value)){\n        const errorMessage : string = \"Le nom du pokemon est requis (1-25)\";\n        const newField : Field = {value:form.name.value,error:errorMessage,isValid:false};\n        newForm = { ...newForm,...{name:newField}};\n    }else{\n        const newField : Field = {value:form.name.value,error:\"\",isValid:true}\n        newForm = { ...newForm,...{name:newField}}\n    }\n    //Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)){\n        const errorMessage : string = \"Les point de vie du pokemon sont compris entre 0 et 999\";\n        const newField : Field = {value:form.hp.value,error:errorMessage,isValid:false};\n        newForm = { ...newForm,...{hp:newField}};\n    }else{\n        const newField : Field = {value:form.hp.value,error:\"\",isValid:true}\n        newForm = { ...newForm,...{hp:newField}}\n    }\n    //Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)){\n        const errorMessage : string = \"Les point de vie du pokemon sont compris entre 0 et 99\";\n        const newField : Field = {value:form.cp.value,error:errorMessage,isValid:false};\n        newForm = { ...newForm,...{cp:newField}};\n    }else{\n        const newField : Field = {value:form.cp.value,error:\"\",isValid:true}\n        newForm = { ...newForm,...{cp:newField}}\n    }\n\n    setForm(newForm)\n    // console.log(newForm.name.isValid , newForm.hp.isValid , newForm.cp.isValid);\n    \n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n}\nconst isTypeValid = (type:string):boolean=>{\n    if(form.types.value.length === 1 && hasType(type)) return false;\n    if(form.types.value.length === 3  && !hasType(type))return false;\n    return true;\n}\nconst deletePokemon = () =>{\n  PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`))\n}\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n            {isEditeForm &&\n              <div className=\"card-image\">    \n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                  <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n\n                </span>\n            </div>\n            }\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {!isEditeForm &&\n                  <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" name='picture' type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e=>handleInputChange(e)}/>\n                  {form.picture.error&&\n                  <div className='card-panel red accent-1'> \n                    {form.picture.error}\n                  </div>\n                  }\n                </div>}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name='name' type=\"text\" className=\"form-control\" value={form.name.value} onChange={e=>handleInputChange(e)}/>\n                  {form.name.error&&\n                  <div className='card-panel red accent-1'> \n                    {form.name.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name='hp' type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e=>handleInputChange(e)}></input>\n                  {form.hp.error&&\n                  <div className='card-panel red accent-1'> \n                    {form.hp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name='cp' type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e=>handleInputChange(e)}></input>\n                  {form.cp.error&&\n                  <div className='card-panel red accent-1'> \n                    {form.cp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\"  className=\"filled-in\" value={type} checked={hasType(type)} onChange={e => selecType(type,e)} disabled={!isTypeValid(type)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n// import POKEMONS from '../models/mock-pokemon';\nimport PokemonService from '../services/pokemon-service';\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(parseInt(match.params.id)).then((pokemon) => {\n      setPokemon(pokemon);\n    })\n    // POKEMONS.forEach(pokemon => {\n    //   if (match.params.id === pokemon.id.toString()) {\n    //     setPokemon(pokemon);\n    //   }\n    // })\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditeForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","export default class Pokemon {\n    // 1. Typage des propiétés d'un pokémon.\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n     \n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = 'http://assets.pokemon.com/assets/cms2/img/pokedex/detail/xxx.png',\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     // 3. Initialisation des propiétés d'un pokémons.\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React ,{ FunctionComponent,useState } from \"react\";\nimport PokemonForm from \"../components/pokemon-form\";\nimport Pokemon from \"../models/pokemon\";\n\n\nconst PokemonAdd : FunctionComponent = () =>  {\n    const [id] = useState<number>(new Date().getTime());\n    const [pokemon] = useState<Pokemon>(new Pokemon(id))\n    \n    return (\n        <div className=\"row\">\n            <h2 className=\"header center\"> Ajouter un pokemon</h2>\n            <PokemonForm pokemon={pokemon} isEditeForm={false} ></PokemonForm>\n        </div>\n    )\n}\nexport default  PokemonAdd;\n","export default class AuthenticationService{\n    static isAuthenticated : boolean = false;\n\n    static login(username:string ,password:string):Promise<boolean> {\n\n\n        const isAuthenticated =  (username === 'fall'&& password === 'passer');\n        return new Promise(resolve => {\n            setTimeout( () => {\n                this.isAuthenticated = isAuthenticated;\n                resolve(isAuthenticated)\n            },1000);\n        });\n    }\n\n    \n}","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n  \nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n  \n    return <Component {...props} />\n  }} />\n);\n  \nexport default PrivateRoute;","import React ,{FunctionComponent} from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport { Link, Route,BrowserRouter as Router, Switch } from 'react-router-dom';\nimport PokemonsDetail from './pages/pokemon-detail';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './components/pokemon-edit';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\nconst App: FunctionComponent = () => {\n\n return (\n  <Router>\n    <div>\n        <nav>\n            <div className=\"na-wrapper teal\">\n                <Link to=\"/\" className=\"brand-logo center\"> Pokedex</Link>\n\n            </div>\n        </nav>\n        <Switch>\n            <PrivateRoute exact path=\"/\" component={PokemonList}/>\n            <Route exact path=\"/login\" component={Login}  />\n            <PrivateRoute exact path= \"/pokemons\" component={PokemonList}/>\n            <PrivateRoute exact path= \"/pokemons/add\" component={PokemonAdd}/>\n            <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit}/>\n            <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail}/>\n            <Route component={PageNotFound} />\n        </Switch>\n    </div>\n    </Router>\n )\n}\n  \nexport default App;","\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(\n    <App />,\n    document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}